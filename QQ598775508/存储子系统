http://www.aboutyun.com/thread-10680-1-1.html

•CacheManager  RDD在进行计算的时候，通过CacheManager来获取数据，并通过CacheManager来存储计算结果
•BlockManager   CacheManager在进行数据读取和存取的时候主要是依赖BlockManager接口来操作，BlockManager决定数据是从内存(MemoryStore)还是从磁盘(DiskStore)中获取
•MemoryStore   负责将数据保存在内存或从内存读取
•DiskStore        负责将数据写入磁盘或从磁盘读入
•BlockManagerWorker  数据写入本地的MemoryStore或DiskStore是一个同步操作，为了容错还需要将数据复制到别的计算结点，以防止数据丢失的时候还能够恢复，数据复制的操作是异步完成，由BlockManagerWorker来处理这一部分事情
•ConnectionManager 负责与其它计算结点建立连接，并负责数据的发送和接收
•BlockManagerMaster 注意该模块只运行在Driver Application所在的Executor，功能是负责记录下所有BlockIds存储在哪个SlaveWorker上，比如RDD Task运行在机器A，所需要的BlockId为3，但在机器A上没有BlockId为3的数值，这个时候Slave worker需要通过BlockManager向BlockManagerMaster询问数据存储的位置，然后再通过ConnectionManager去获取，具体参看“数据远程获取一节”

上述的各个模块由SparkEnv来创建，创建过程在SparkEnv.create中完成.

数据写入的简要流程
1.RDD.iterator是与storage子系统交互的入口
2.CacheManager.getOrCompute调用BlockManager的put接口来写入数据
3.数据优先写入到MemoryStore即内存，如果MemoryStore中的数据已满则将最近使用次数不频繁的数据写入到磁盘
4.通知BlockManagerMaster有新的数据写入，在BlockManagerMaster中保存元数据
5.将写入的数据与其它slave worker进行同步，一般来说在本机写入的数据，都会另先一台机器来进行数据的备份，即replicanumber=1

数据读取
本地读取
 首先在查询本机的MemoryStore和DiskStore中是否有所需要的block数据存在，如果没有则发起远程数据获取。
远程读取
 远程获取调用路径， getRemote->doGetRemote, 在doGetRemote中最主要的就是调用BlockManagerWorker.syncGetBlock来从远程获得数据


